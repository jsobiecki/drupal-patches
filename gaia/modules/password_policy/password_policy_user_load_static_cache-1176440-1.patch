diff --git a/password_policy.module b/password_policy.module
index 54942ff..7019262 100644
--- a/password_policy.module
+++ b/password_policy.module
@@ -217,7 +217,7 @@ function password_policy_format_title($policy) {
 function password_policy_user($op, &$edit, &$account, $category = NULL) {
   switch ($op) {
     case 'load':
-      $account->force_password_change = db_result(db_query('SELECT force_change FROM {password_policy_force_change} WHERE uid=%d', $account->uid));
+      $account->force_password_change = _password_policy_force_password_change($account->uid);
       break;
 
     case 'validate':
@@ -240,6 +240,7 @@ function password_policy_user($op, &$edit, &$account, $category = NULL) {
           _password_policy_store_password($account->uid, $edit['pass']);
         }
       }
+      _password_policy_force_password_change($account->uid, TRUE);
       break;
 
     case 'update':
@@ -258,6 +259,7 @@ function password_policy_user($op, &$edit, &$account, $category = NULL) {
         // Account is being unblocked.
         db_query('UPDATE {password_policy_expiration} SET unblocked = %d WHERE uid = %d', time(), $account->uid);
       }
+      _password_policy_force_password_change($account->uid, TRUE);
       break;
 
     case 'login':
@@ -837,6 +839,27 @@ function _password_policy_unblock($account) {
 }
 
 /**
+ * Check if user have to change his password.
+ * 
+ * @param $uid
+ *   User ID.
+ * @param $reset
+ *   TRUE to reset static cache.
+ */
+function _password_policy_force_password_change($uid, $reset = FALSE) {
+  static $force = array();
+
+  if (!isset($force[$uid]) || $reset) {
+    $force[$uid] = db_result(db_query(
+    	'SELECT force_change FROM {password_policy_force_change} WHERE uid=%d',
+      $uid
+    ));
+  }
+
+  return $force[$uid];
+}
+
+/**
  * Add password policy JS
  *
  * @param $policy
