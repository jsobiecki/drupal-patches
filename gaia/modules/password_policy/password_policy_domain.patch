Index: password_policy.module
===================================================================
--- password_policy.module	(wersja 3568)
+++ password_policy.module	(wersja 3569)
@@ -382,7 +382,7 @@
   }
 
   // Get all users' last password change time. We don't touch blocked accounts
-  $result = db_query("SELECT u.uid AS uid, u.created AS created_u, p.created AS created_p, e.pid AS pid, e.warning AS warning, e.unblocked AS unblocked FROM {users} u LEFT JOIN {password_policy_history} p ON u.uid = p.uid LEFT JOIN {password_policy_expiration} e ON u.uid = e.uid WHERE u.uid > 0 AND u.status = '1' ORDER BY p.created ASC");
+  $result = db_query("SELECT u.uid AS uid, u.created AS created_u, p.created AS created_p, e.pid AS pid, e.warning AS warning, e.unblocked AS unblocked, de.domain_id as domain_id FROM {users} u LEFT JOIN {password_policy_history} p ON u.uid = p.uid LEFT JOIN {password_policy_expiration} e ON u.uid = e.uid INNER JOIN domain_editor de ON u.uid = de.uid WHERE u.uid > 0 AND u.status = '1' ORDER BY p.created ASC");
   while ($row = db_fetch_object($result)) {
     if ($row->uid == 1 && !PASSWORD_POLICY_ADMIN)
       continue;
@@ -395,13 +395,34 @@
     $unblocks[$row->uid] = $row->unblocked;
     // The user was last time unblocked (if was). We don't block this account again for some period of time.
     $pids[$row->uid] = $row->pid;
+
+    //argh, this is not prettiest solutions, but ok
+    $domains[$row->uid] = $row->domain_id;
   }
 
   if ($accounts) {
     foreach ($accounts as $uid => $last_change) {
       /* Alternative: $result = db_query("SELECT p.* FROM {password_policy} p INNER JOIN {password_policy_role} r ON p.pid = r.pid INNER JOIN {users_roles} u ON r.rid = u.rid WHERE p.enabled = 1 AND u.uid = %d ORDER BY p.weight LIMIT 1", $uid); */
       $roles = array(DRUPAL_AUTHENTICATED_RID);
+
+      //Description:
+      //For each row, switch db context to domain, where user is assigned (we used domain_editor table as source).
+      global $_domain;
+      $domains_data = domain_domains();
+      $old_domain = $_domain;
+
+      //switch prefix to domain of user
+      $_domain = $domains_data[$domains[$uid]];
+      domain_prefix_domain_bootstrap_full($_domain);
+
+      //check roles of user
       $result = db_query("SELECT rid FROM {users_roles} WHERE uid = %d ORDER BY rid", $uid);
+
+      //switch db_prefix back
+      $_domain = $old_domain;
+      domain_prefix_domain_bootstrap_full($_domain);
+
+
       while ($row = db_fetch_object($result)) {
         $roles[] = $row->rid;
       }
