diff -ruB ./memcache.inc /home/jarsob/workspace/mr.X/app/sites/all/modules/contrib/memcache/memcache.inc
--- memcache.inc	2012-06-15 14:32:21.378201389 +0200
+++ memcache.inc	2012-06-15 14:32:04.102200813 +0200
@@ -31,6 +31,8 @@
  *   'cache_menu', 'cache_page', or 'cache' for the default cache.
  */
 function cache_get($cid, $table = 'cache') {
+
+  cache_write_statistics('cache_get', $table, $cid, TRUE, $_SERVER['HTTP_HOST']);
   // Handle excluded bins first.
   $bins = variable_get('memcache_bins', array());
   if (!is_null($table) && isset($bins[$table]) && $bins[$table] == 'database') {
@@ -173,6 +175,7 @@
 function cache_set($cid, $data, $table = 'cache', $expire = CACHE_PERMANENT, $headers = NULL) {
   // Handle database fallback first.
   $bins = variable_get('memcache_bins', array());
+  cache_write_statistics('cache_set', $table, $cid, TRUE, $_SERVER['HTTP_HOST']);
   if (!is_null($table) && isset($bins[$table]) && $bins[$table] == 'database') {
     return _cache_set($cid, $data, $table, $expire, $headers);
   }
@@ -234,6 +237,7 @@
  *   match. If '*' is given as $cid, the table $table will be emptied.
  */
 function cache_clear_all($cid = NULL, $table = NULL, $wildcard = FALSE) {
+  cache_write_statistics('cache_clear_all', $table, $cid, TRUE, $_SERVER['HTTP_HOST']);
   // Handle database fallback first.
   $bins = variable_get('memcache_bins', array());
   if (!is_null($table) && isset($bins[$table]) && $bins[$table] == 'database') {
@@ -438,3 +442,60 @@
   // If the variables aren't cached, there's no need to do anything.
   $conf[$name] = $value;
 }
+
+
+/**
+ * This file write (if enabled) current cache statistics usage to 
+ * csv file for later analytics.
+ *
+ * @param $op_type
+ *   Operator type, one of cache_get, cache_set, cache_clear_all
+ * @param $bin_name 
+ *   Bin name
+ * @param $cid_name
+ *   Unique identifier of $cid
+ * @success
+ *   Does opearation succedded or failed
+ * @info 
+ *   Additional information
+ * @return
+ *   TRUE if statistics file was updated. FALSE otherwise.
+ */
+function cache_write_statistics($op_type, $bin_name, $cid_name, $success, $info) {
+  // This variable toggles this functionality
+  if (
+    variable_get('cache_write_statistics', FALSE) && 
+    in_array($bin_name, array('cache_page', 'cache_views_data', 'users', 'cache_block'))
+  ) {
+
+    // Get executor
+    $backtrace = debug_backtrace();
+
+    // List of functions where SQL queries can originate.
+    $cache_functions = array('cache_get', 'cache_clear_all', 'cache_set', 'cache_write_statistics');
+
+    // Determine where query function was called, and adjust line/file
+    // accordingly.
+    foreach ($backtrace as $index => $function) {
+      if (!in_array($function['function'], $cache_functions)) {
+        $function_name = $function['function'];
+        $line = $function['line'];
+        $filename = $function['file'];
+        break;
+      }
+    }
+
+    $file = fopen(conf_path()  .'/files/cache_statistics.csv', 'a+');
+    fputcsv(
+      $file,
+      array(time(), $op_type, $bin_name, $cid_name, $success, $info, $function_name, $line, $filename)
+    );
+    fflush($file);
+    fclose($file);
+
+    return TRUE;
+  }
+  else {
+    return FALSE;
+  }
+}
